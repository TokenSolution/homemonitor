[syslog]
TRANSFORMS-changesourcetype = asus, fios, link sys, mikro, netgear, openwrt, pfsense, quantum, sophos, skyhub, tomato

[asus]
# Based on Asus RT-N66U router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) .*?: (?P<action>\w+)(?= )
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[fios]
EXTRACT-direction = ^(?:[^ \n]* ){9}(?P<direction>\w+)
EXTRACT-action = ^(?:[^ \n]* ){10}(?P<action>\w+)
EXTRACT-state,protocol,src_ip,src_port,dest_ip,dest_port = ^[^\]\n]*\]\s+(?P<state>\w+\s+\w+)[^:\n]*:\s+(?P<protocol>\w+)\s+(?P<src_ip>[^:]+):(?P<src_port>[^ ]+)[^\[\n]*\[(?P<dest_ip>[^:]+):(?P<dest_port>\d+)
EXTRACT-src_ip,src_port,dest_ip,dest_port = ^[^\(\n]*\(\w+\s+(?P<src_ip>[^:]+):(?P<src_port>\d+)\->(?P<dest_ip>[^:]+):(?P<dest_port>\d+)
LOOKUP-fios = action_lookup action OUTPUTNEW action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[linksys]
DATETIME_CONFIG = CURRENT
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
category = Custom
pulldown_type = true
EXTRACT-src_ip,dest_ip,linksys_src_port,action = ^(?P<src_ip>[^ ]+) to (?P<dest_ip>[^:]+):(?P<linksys_src_port>[a-z]+) is (?P<action>.+)
LOOKUP-linksys_src_port_lookup = linksys_src_port_lookup linksys_src_port OUTPUTNEW src_port
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[mikro]
EXTRACT-hostname = ^(?:[^ \n]* ){7}(?P<hostname>\w+)
EXTRACT-protocol = ^(?:[^,\n]*,){2}\s+\w+\s+(?P<protocol>\w+)
EXTRACT-src_ip,src_port = ^(?:[^,\n]*,){4}\s+(?P<src_ip>[^:]+)[^:\n]*:(?P<src_port>\d+)
EXTRACT-dest_ip,dest_port = ^[^>\n]*>(?P<dest_ip>[^:]+)[^:\n]*:(?P<dest_port>\d+)
EXTRACT-direction = ^(?:[^ \n]* ){9}(?P<direction>\w+)
EXTRACT-nat_ip,nat_port = ^(?:[^>\n]*>){2}(?P<nat_ip>[^:]+)[^:\n]*:(?P<nat_port>[^\)]+)
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[netgear]
# Based on Netgear FV318N router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) LOG_PACKET\[(?P<action>[^\]]+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[openwrt]
# Based on Asus RT-N66U router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = ^[^\]\n]*\]\s+(?P<action>\w+)
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[pfsense]
EXTRACT-application = ^(?:[^ \n]* ){7}(?P<application>\w+)
EXTRACT-action,direction,protocol,length,src_ip,dest_ip,src_port,dest_port,data_length = ^(?:[^,\n]*,){6}(?P<action>[a-z]+),(?P<direction>[a-z]+)(?:[^,\n]*,){9}(?P<protocol>[^,]+),(?P<length>[^,]+),(?P<src_ip>[^,]+),(?P<dest_ip>[^,]+),(?P<src_port>[^,]+),(?P<dest_port>[^,]+),(?P<data_length>.+)
EXTRACT-nat_ip,nat_mac,nat_hostname = ^(?:[^:\n]*:){5}\s+\w+\s+\w+\s+(?P<nat_ip>[^ ]+) from (?P<nat_mac>[^ ]+)\s+\((?P<nat_hostname>\w+)
LOOKUP-action_lookup = action_lookup action OUTPUT action2
EXTRACT-ip_v = ^(?:[^,\n]*,){8}(?P<ip_v>\d+)
EXTRACT-src_ipv6,dest_ipv6 = ^\w+\s+\d+\s+\d+:\d+:\d+\s+\w+\.\w+\.\w+\s+\w+\s+\d+\s+\d+:\d+:\d+\s+\w+:\s+\d+,\d+,,\d+,\w+\d+,\w+,\w+,\w+,\d+,\d+\w+\d+,\d+\w+\d+,\d+,\w+\d+,\d+,\d+,(?P<src_ipv6>[^,]+),(?P<dest_ipv6>[^,]+)
EXTRACT-snort_classification,priority,snort_protocol,src_ip_snort,src_port_snort,dest_ip_snort,dest_port_snort = ^(?:[^:\n]*:){8}\s+(?P<snort_classification>[^\]]+)[^\[\n]*\[\w+:\s+(?P<priority>[^\]]+)[^ \n]* \{(?P<snort_protocol>\w+)[^ \n]* (?P<src_ip_snort>[^:]+):(?P<src_port_snort>[^ ]+)[^>\n]*>\s+(?P<dest_ip_snort>[^:]+):(?P<dest_port_snort>\d+)
EXTRACT-user_openvpn,src_ip_openvpn,src_port_openvpn,vip_openvpn = ^(?:[^ \n]* ){8}(?P<user_openvpn>\w+)/(?P<src_ip_openvpn>[^:]+):(?P<src_port_openvpn>\d+)(?:[^ \n]* ){3}(?P<vip_openvpn>[^ ]+)
EXTRACT-openvpn_status,openvpn_desc = ^(?:[^ \n]* ){9}(?P<openvpn_status>[^:]+):\s+(?P<openvpn_desc>.+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[quantum]
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = ^[^\]\n]*\]:\s+(?P<action>\w+)
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host


[sophos]
FIELDALIAS-srcip = srcip as src_ip
FIELDALIAS-srcport = srcport as src_port
FIELDALIAS-dstip = dstip as dest_ip
FIELDALIAS-dstport = dstport as dest_port
FIELDALIAS-dstmac = dstmac as dest_mac
FIELDALIAS-proto = proto as protocol
FIELDALIAS-fwrule = fwrule as firewall_rule
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[skyhub]
# Based on Skyhub SR101 router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) kernel: (?P<action>[^\-]+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[tomato]
#Based on the ASUS model provided in the default props.conf
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
#EXTRACT-action = (?i) .*?: (?P\w+)(?= )
EVAL-direction = if(match(IN,"vlan2"), "in", "out")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_hos
